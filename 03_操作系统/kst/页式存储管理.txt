“≥ Ω¥Ê¥¢π‹¿Ì

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX 2048
int graph[64][32];
int page_table[MAX][2];
void read_data( );
void init_graph( );
void display_graph(  );
void cal_free( );
void display_page_table( int );
int row,col;
int count;
void apply_mem( );
void main( )
{
int menu;
init_graph( );
read_data( );
printf("the initial graph is:\n");
display_graph( );
printf("\n");
cal_free( );
while(1)
{
  printf("0--exit\t1--applay memeory\n");
  printf("make a choice\n");
  scanf("%d",&menu);
  switch( menu )
  {
   case 0: getch( );
     exit(1);
   case 1: apply_mem( ); break;
   default:puts("input error!\n");
  }
}
}
void cal_free( )
{
int i,j;
for( i=0;i<64;i++ )
  for( j=0;j<32;j++ )
   if( graph[i][j]==0  )
    count++;
}
void read_data( )
{
int i=0;
FILE *fp;
char str[2];
char ch;
fp=fopen("b.txt","r");
if( fp==NULL )
{
  puts("Error! there has no b.txt");
  getch( );
  exit(1);
}
str[1]='\0';
while( (ch=fgetc(fp))!=EOF )
{
  if(ch=='0'||ch=='1')
  {
   str[0]=ch;
   graph[row][i]=atoi(str);
   i++;
   continue;
  }
  col=i;
  if(ch=='\n')
  {
   i=0;
   row++;
  }
}
fclose(fp);
}
void init_graph( )
{
int i,j;
for( i=0;i<64;i++ )
  for(j=0;j<32;j++ )
   graph[i][j]=0;
for(i=0;i<MAX;i++ )
  for( j=0;j<2;j++ )
   page_table[i][j]=0;
}

void apply_mem( )
{
int i,j,num,x;
printf("please input the quantity of applied block\n");
scanf("%d",&num);
while( num>count )
{
  printf("the applied number is too large,please input again\n");
  scanf("%d",&num);
}
x=0;
count-=num;
for( i=0;i<num;i++ )
  page_table[i][0]=i+1;
for( i=0;i<64;i++ )
{
  for( j=0;j<32;j++ )
  {
   if( graph[i][j]==0&&x<num)
   {
    graph[i][j]=1;
    page_table[x++][1]=64*i+j+1;
   }
   if( x==num )
    break;
  }
  if( x==num)
   break;
}
printf("the graph after assigning\n");
display_graph( );
printf("the page table is:\n");
printf("page:mem_block\n");
display_page_table( num );
}

void display_graph(  )
{
int i,j;
for( i=0;i<row;i++ )
{
  for( j=0;j<col;j++ )
   printf("%2d",graph[i][j]);
  printf("\n");
}
printf("\n");
}
void display_page_table( int n )
{
int i;
for( i=0;i<n;i++ )
{
  printf("%4d:%4d\t",page_table[i][0],page_table[i][1]);
  if( i+1%10==0 )
   printf("\n");
}
printf("\n");
}

