==================================================
1、建立图的邻接距阵，输入为：n i1 j1 i2 j2 i3.....-1 -1输出该距阵，并输出拓扑排序。提示：有向图，n是顶点数，30 > n > 0,其它的都是整数，小于n且大于等于0。

==================================================
2、建立一个空二叉排序树，输入一串数据（以-9999结尾），输出前序和中序遍历。其中：输入数据均为整数，输入时以空格分开。

==================================================
8、编一C程序，它能读入6个字符串（每个串长度都不大于80，可能含空格字符），依次判断前5个串是否为第6个串的子串，若是则输出YES；否则输出NO。

==================================================
2、编一C程序，它能读入两组整数（每组整数都以-9999为结束标记，个数都不大于1000），并以从小到大的次序输出既在第一组整数中也在第二组整数中的所有整数（同一个整数不能输出两次）。（输入时，两个相邻的整数用空格隔开)。

==================================================
4、编一C程序，它能对输入的一串整数（不多于1000个，以-9999为结束标记）到数组a中，再对a的元素进行直接插入排序（从小到大排序），输出排序结果和所用关键字比较次数。（输入时，两个相邻的整数用空格隔开)。

==================================================
6、编一C程序，它能读入一串（n个）整数（以-9999为结束标记），并判断第1个整数在后(n-1)个整数中出现的次数，再输出该次数。（输入时，两个相邻的整数用空格隔开)。

==================================================
7、编一C程序，它能根据输入的完全二叉树层次序列来构造该完全二叉树，并能输出该完全二叉树的后序序列和叶结点的个数。（完全二叉树层次序列是从1层到最高层、同层内从左到右的次序排列的结点序列）。

==================================================
1、输入前序和中序构造二叉树，并输出后序和度为1的结点个数。

==================================================
2、输入一串整数，判断第N个数在前N-1个序列中出现了几次，输出次数。 

==================================================
1、编一二叉树,能根据输入的二叉树中序和后序序列来构造二叉树,并能输出该二叉树的前序序列和该二叉树的深度(输入次序是表示中序序列的字符串,表示后序序列的字符串).可执行文件名为e1.exe 

==================================================
2、对一串整数(不多于1000个,以-9999为结束)进行选择排序(从小到大)输出排序结果和所用的记录交换次数)(输入时两个相临的整数用空格隔开) 文件名e2.exe 

==================================================
1、对二*树扩充方法是：对无左孩子的结点，增加一个标记为*的左孩子的结点；对无右孩子的结点，增加一个标记为*的右孩子的结点。对扩充后的二*树可进行前序、中序和后序遍历。例如，对下面的二*树扩充后再遍历，

               A
             /  C         
            B    /
             D E
前序、中序和后序序列依次是：AB*D**CE***    *B*D*A*E*C*   ***DB**E*CA
编一C程序，它能根据下列输入之一来构造相应的二*树，并输出该二*树的前序、中序和后序序列及高度、叶结点、二度结点、一度结点的个数。
（1） 二*树前序列和中序序列（前序列和中序序列各占一行）
（2） 二*树后序列和中序序列（后序列和中序序列各占一行）
（3） 扩充后的二*树的前序序列
（4） 扩充后的二*树的后序序列
（5） 完全二*树的层次序列

（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
2. 编一C程序，它能根据读入的数据构造有向图G，并输出G的邻接矩阵及DFS遍历序列（从V0开始）以及拓扑序列，图的输入形式为n V0 Vi0 V1 Vi1 V2 Vi2...Vi Vin -1 -1（-1，-1为输入结束标记，其余的值都>=0且<n），它们都是整数，且100>n>0。

（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
1．编一C程序，它能读入两组整数（每组整数都是66个整数），它们分别是下三角矩阵A和下三角矩阵B的按行优先排列的元素（A和B的其它元素均为零）。计算并输出矩阵A与B的乘积。可以把A和B看成整数集合，输出它们的并集、交集和差集。
（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
2．编一C程序，它能对输入的一串整数（不多于1000个，以-9999为结束标记）到数组a中，再对a的元素进行直接插入排序（或起泡排序等）（从小到大排序），输出排序结果和所用关键字比较次数。（输入时，两个相邻的整数用空格隔开)。

（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================

1. 编一C程序，它能根据读入的数据构造有向图G，并输出G的DFS遍历序列（从V0开始），还要输出矩阵。图的输入形式为n V0 Vi0 V1 Vi1 V2 Vi2...Vi Vin -1 -1（-1，-1为输入结束标记，其余的值都>=0且<n），它们都是整数，且30>n>0。（注：程序的可执行文件名必须是 e1.exe） 

==================================================
2. 编一C程序，它能读入一串整数（不多于2000，并以-9999为结束标记）以从小到大的方式，用直接插入排序。并计算比较次数。（注：程序的可执行文件名必须是 e2.exe） 

==================================================
1、编一二叉树,能根据输入的二叉树中序和后序序列来构造二叉树,并能输出该二叉树的前序序列和该二叉树的深度(输入次序是表示中序序列的字符串,表示后序序列的字符串).可执行文件名为e1.exe 

==================================================
2、对一串整数(不多于1000个,以-9999为结束)进行选择排序(从小到大)输出排序结果和所用的记录交换次数)(输入时两个相临的整数用空格隔开) 文件名e2.exe 
 

==================================================
1、输入前序和中序构造二叉树，并输出后序和度为1的结点个数。

==================================================
2、输入一串整数，判断第N个数在前N-1个序列中出现了几次，输出次数。

==================================================
1、建立图的邻接距阵，输入为：n i1 j1 i2 j2 i3.....-1 -1 输出该距阵，并输出拓扑排序。提示：有向图，n是顶点数，30 > n > 0,其它的都是整数，小于n且大于等于0。

==================================================
2、建立一个空二叉排序树，输入一串数据（以-9999 结尾），输出前序和中序遍历。其中：输入数据均为整数，输入时以空格分开。  

==================================================
1、输入一串整数（－9999结束），以输入次序反向输出（相邻整数用空格隔开）。 

==================================================
2、输入中序，后序，构造二叉树。输出前序和叶子结点个数，并能判断是否为排序二叉树（若是输出“Yes”，否则输出“No”）。输入次序：中序序列字母串，后序序列字母串。

==================================================
1.编一C程序，它能读入集合A的一串整数（以-9999为结束标记，整数个数小于1000）和集合B的一串整数（以-9999为结束标记，整数个数小于1000），计算出A与B的交集，并以由小到大的次序输出A与B的交集中的所有整数（输入整数时，相邻的两个用空格隔开。为A或B输入时，同一个数可能出现多次，而A与B的交集中同一个数不能出现多次）。
 （注：程序的可执行文件名必须是 e1.exe）

==================================================
2. 编一C程序，它能根据读入的数据构造有向图G，并输出G的DFS遍历序列（从V0开始），图的输入形式为n V0 Vi0 V1 
 Vi1 V2 Vi2...Vi Vin -1 
 -1（-1，-1为输入结束标记，其余的值都>=0且<n），它们都是整数，且100>n>0。
 （注：程序的可执行文件名必须是 e2.exe）

==================================================
3.编一C程序，它能读入一串整数（以-9999为结束标记）并对它们进行从小到大直接插入排序，同时输出排序时对这些整数进行比较的总次数（输入整数时，相邻的两个用空格隔开，整数个数<2000）。
 （注：程序的可执行文件名必须是 e3.exe）

==================================================
4.编一C程序，它能读入集合A的一串整数（以-9999为结束标记，整数个数小于1000）和集合B的一串整数（以-9999为结束标记，整数个数小于1000），计算并以从小到大的次序输出A-B的所有元素(为A或B输入时，同一个数可能出现多次，而A与B的差集中同一个数不能出现多次）。
 （注：程序的可执行文件名必须是 e4.exe）

==================================================
5.编一C程序，它能根据读入的数据构造有向图G，图的输入形式为n V0 Vi0 V1 Vi1 V2 Vi2...Vi Vin -1 
 -1（-1 -1是输入结束标记），它们都是整数，且100>n>0，其余的值都>=0且<n,输出图G的拓扑序列。
 （注：程序的可执行文件名必须是 e5.exe）

==================================================
6.编一C程序，它能读入一串整数（不多于2000，并以-9999为结束标记）及另一整数n，判断n是否在那一串数中，若是，则输出yes及该数在那串整数中的序号（序号从0开始），否则输出no。(输入整数时，相邻的两个用空格隔开)。
 （注：程序的可执行文件名必须是 e6.exe）

==================================================
7.编一C程序，它能把读入的整数依次插入到一个初始为空的二叉排序树中，一直读到-9999为止。再从该二叉排序树中删除读入的第三个整数，之后输出该二叉排序树的前序序列、中序序列及叶结点的个数。（输入时，两个相邻的整数用空格隔开)。
 （注：程序的可执行文件名必须是 e7.exe，存于你的账号或其debug目录下）

==================================================
8.编一C程序，它能根据输入的二叉树前序和中序序列来构造该二叉树，并能输出该二叉树的后序序列和该二叉树度为1的结点的个数。（输入次序是：表示前序序列的字符串、表示中序序列的字符串）。
 （注：程序的可执行文件名必须是 e8.exe，存于你的账号或其debug目录下）

==================================================
 １、求拓朴排序后结果及用矩阵表示。。输入形式为：n  1  2  1 3 .....(就是上机练习题上的哪个题，不过多加了一个用矩阵表示)。。。

==================================================
2、输入一串整数，以相反次序输出

==================================================
1,输入无权无向图，n,vi,vj,…………，并且输出该图的邻接矩阵，再进行深度遍历（DFS），输出结果 v0,v2,v4……

==================================================
2,输入一组数，以空格分开，以-9999结束，用插入法小到大排序并输出，并且输出与关键字比较的次数；

==================================================
1 ．编一C程序，它能根据读入的数据构造有向图G，并输出G的邻接矩阵及G的拓扑序列。图的输入形式为  i0  j0   i1  j1   i2  j2   ...im  jm   -1  -1（-1，-1为有向边输入结束标记，其余的值都>=0且<n。）n，它们都是整数，n是有向图G的顶点个数且40>n>0，顶点名字依次是V0,V1,V2,…Vn-1； ik  jk 表示向图G的有向边<Vik,Vjk>。


（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================       

2． 编一C程序，它能读入两组整数（每组整数都以-9999为结束标记，个数都不大于1000），并以从小到大的次序输出既在第一组整数中也在第二组整数中的所有整数（同一个整数不能输出两次）。（输入时，两个相邻的整数用空格隔开)。
（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
3．编一C程序，它能读入两组整数（每组整数都是66个整数），它们分别是下三角矩阵A和下三角矩阵B的按行优先排列的元素（A和B的其它元素均为零）。计算并输出矩阵A与B的乘积。

（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
4．编一C程序，它能对输入的一串整数（不多于1000个，以-9999为结束标记）到数组a中，再对a的元素进行直接插入排序（从小到大排序），输出排序结果和所用关键字比较次数。（输入时，两个相邻的整数用空格隔开)。


（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
5．  编一C程序，它能根据输入的二*树前序和中序序列来构造该二*树，并能输出该二*树的后序序列和该二*树叶的结点的个数以及该二*树高度。（输入次序是：表示前序序列的字符串、表示中序序列的字符串）。


（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
6．编一C程序，它能读入一串（n个）整数（以-9999为结束标记），并判断第1个整数在后(n-1)个整数中出现的次数，再输出该次数。（输入时，两个相邻的整数用空格隔开)。

（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
7．  编一C程序，它能根据输入的二*树中序和后序序列来构造该二*树，并能输出该二*树的前序序列和该二*树的度为2的结点的个数并能判断该二*树是否为二*排序树（若是输出Yes；否则输出No）。（输入次序是：表示中序序列的字母串、表示后序序列的字母串）。

（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
8．编一C程序，它能读入一串整数（以-9999为结束标记），再以与输入次序相反的次序输出这串整数（输入、出时，两个相邻的整数用空格隔开)。

（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
9．  编一C程序，它能根据输入的完全二*树层次序列来构造该完全二*树，并能输出该完全二*树的后序序列和叶结点的个数。（完全二*树层次序列是从1层到最高层、同层内从左到右的次序排列的结点序列）。

（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
10．编一C程序，它能读入6个字符串（每个串长度都不大于80，可能含空格字符），依次判断前5个串是否为第6个串的子串，若是则输出YES；否则输出NO。


（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）

==================================================
11．  编一C程序，它能根据输入的二*树层次序列和中序序列来构造该二*树，并能输出该二*树的后序序列和叶结点的个数。（二*树层次序列是从1层到最高层、同层内从左到右的次序排列的结点序列）。

（注：程序的可执行文件名必须是 e1.exe，存于你的账号或其debug目录下。）

==================================================
12. 编一C程序，它能根据读入的数据构造有向图G，并输出G的DFS遍历序列（从V0开始），图的输入形式为n V0 Vi0 V1 Vi1 V2 Vi2...Vi Vin -1 -1（-1，-1为输入结束标记，其余的值都>=0且<n），它们都是整数，且100>n>0。

（注：程序的可执行文件名必须是 e2.exe，存于你的账号或其debug目录下。）
